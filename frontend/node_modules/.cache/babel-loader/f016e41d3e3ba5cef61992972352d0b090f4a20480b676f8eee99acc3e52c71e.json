{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport PostForm from '../components/PostForm';\nimport PostDetailsModal from '../components/PostDetailsModal';\nimport io from 'socket.io-client';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Dashboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [showNotificationDot, setShowNotificationDot] = useState(false);\n  const [showNotificationPrompt, setShowNotificationPrompt] = useState(false); // New state to show prompt\n  const [selectedPost, setSelectedPost] = useState(null); // State to track selected post for modal\n\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('token');\n  const fetchPosts = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/posts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const fetchUnreadNotifications = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/notifications/unread', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(data.map(notif => ({\n        ...notif,\n        read: false\n      })));\n      setShowNotificationDot(data.length > 0);\n    } catch (error) {\n      console.error(\"Error fetching notifications:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n    fetchUnreadNotifications();\n    socket.on('newPostNotification', notification => {\n      if (notification.authorUsername !== username) {\n        setNotifications(prev => [{\n          ...notification,\n          read: false\n        }, ...prev]);\n        setShowNotificationDot(true);\n      }\n    });\n    return () => {\n      socket.off('newPostNotification');\n    };\n  }, [username]);\n  const handlePostCreated = () => {\n    fetchPosts();\n    setShowPostForm(false);\n  };\n  const togglePostForm = () => {\n    setShowPostForm(prev => !prev);\n  };\n  const handleNotificationClick = () => {\n    setShowNotificationPrompt(true); // Show the prompt when clicking notification\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    window.location.href = '/';\n  };\n  const handleViewNotificationPost = async notification => {\n    try {\n      const {\n        data\n      } = await API.get(`/posts/${notification.postId}`);\n      setSelectedPost(data);\n\n      // Mark notification as read and change color\n      setNotifications(prev => prev.map(notif => notif.postId === notification.postId ? {\n        ...notif,\n        read: true\n      } : notif));\n    } catch (error) {\n      console.error(\"Error fetching post details:\", error);\n    }\n  };\n  const closeModal = () => {\n    setSelectedPost(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username-box\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePostForm,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-box\",\n        onClick: handleNotificationClick,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), showNotificationDot && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), posts.length > 0 ? posts.map(post => {\n        var _post$author;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"author-name\",\n            children: [\"Posted by: \", ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.username) || \"Anonymous\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleViewNotificationPost(post._id),\n            children: \"View Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(PostDetailsModal, {\n      post: selectedPost.post,\n      codeContent: selectedPost.codeContent,\n      fileContent: selectedPost.uploadedFileContent,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), showNotificationPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-prompt\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Unread Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `notification-item ${notification.read ? \"read\" : \"unread\"}` // Color change based on read/unread\n        ,\n        style: {\n          color: notification.read ? 'green' : 'red'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted by: \", notification.authorUsername]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleViewNotificationPost(notification),\n          children: \"View Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, notification._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowNotificationPrompt(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"TTegmTCADSTA0O4fHcTBbCKkv08=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","PostForm","PostDetailsModal","io","jsxDEV","_jsxDEV","socket","Dashboard","_s","posts","setPosts","showPostForm","setShowPostForm","notifications","setNotifications","showNotificationDot","setShowNotificationDot","showNotificationPrompt","setShowNotificationPrompt","selectedPost","setSelectedPost","username","localStorage","getItem","token","fetchPosts","data","get","headers","Authorization","error","console","fetchUnreadNotifications","map","notif","read","length","on","notification","authorUsername","prev","off","handlePostCreated","togglePostForm","handleNotificationClick","handleLogout","removeItem","window","location","href","handleViewNotificationPost","postId","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onPostCreated","post","_post$author","author","title","_id","codeContent","fileContent","uploadedFileContent","onClose","style","color","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport PostForm from '../components/PostForm';\r\nimport PostDetailsModal from '../components/PostDetailsModal';\r\nimport io from 'socket.io-client';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Dashboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [showPostForm, setShowPostForm] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [showNotificationDot, setShowNotificationDot] = useState(false);\r\n  const [showNotificationPrompt, setShowNotificationPrompt] = useState(false); // New state to show prompt\r\n  const [selectedPost, setSelectedPost] = useState(null); // State to track selected post for modal\r\n\r\n  const username = localStorage.getItem('username');\r\n  const token = localStorage.getItem('token');\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const { data } = await API.get('/posts', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setPosts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUnreadNotifications = async () => {\r\n    try {\r\n      const { data } = await API.get('/notifications/unread', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setNotifications(data.map(notif => ({ ...notif, read: false })));\r\n      setShowNotificationDot(data.length > 0);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notifications:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    fetchUnreadNotifications();\r\n\r\n    socket.on('newPostNotification', (notification) => {\r\n      if (notification.authorUsername !== username) {\r\n        setNotifications((prev) => [{ ...notification, read: false }, ...prev]);\r\n        setShowNotificationDot(true);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('newPostNotification');\r\n    };\r\n  }, [username]);\r\n\r\n  const handlePostCreated = () => {\r\n    fetchPosts();\r\n    setShowPostForm(false);\r\n  };\r\n\r\n  const togglePostForm = () => {\r\n    setShowPostForm((prev) => !prev);\r\n  };\r\n\r\n  const handleNotificationClick = () => {\r\n    setShowNotificationPrompt(true); // Show the prompt when clicking notification\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const handleViewNotificationPost = async (notification) => {\r\n    try {\r\n      const { data } = await API.get(`/posts/${notification.postId}`);\r\n      setSelectedPost(data);\r\n\r\n      // Mark notification as read and change color\r\n      setNotifications((prev) =>\r\n        prev.map((notif) =>\r\n          notif.postId === notification.postId ? { ...notif, read: true } : notif\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error fetching post details:\", error);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedPost(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"username-box\">\r\n          <span>{username}</span>\r\n        </div>\r\n\r\n        <button onClick={togglePostForm}>Create Post</button>\r\n\r\n        <div className=\"notification-box\" onClick={handleNotificationClick}>\r\n          <button>Notification</button>\r\n          {showNotificationDot && <span className=\"notification-dot\"></span>}\r\n        </div>\r\n      </div>\r\n\r\n      {showPostForm && <PostForm onPostCreated={handlePostCreated} />}\r\n\r\n      <div className=\"posts-container\">\r\n        <h2>Recent Posts</h2>\r\n        {posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <div key={post._id} className=\"post-item\">\r\n              <p className=\"author-name\">Posted by: {post.author?.username || \"Anonymous\"}</p>\r\n              <h3>{post.title}</h3>\r\n              <button onClick={() => handleViewNotificationPost(post._id)}>View Post</button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No posts available</p>\r\n        )}\r\n      </div>\r\n\r\n      {selectedPost && (\r\n        <PostDetailsModal\r\n          post={selectedPost.post}\r\n          codeContent={selectedPost.codeContent}\r\n          fileContent={selectedPost.uploadedFileContent}\r\n          onClose={closeModal}\r\n        />\r\n      )}\r\n\r\n      {/* Notification Prompt Modal */}\r\n      {showNotificationPrompt && (\r\n        <div className=\"notification-prompt\">\r\n          <h3>Unread Notifications</h3>\r\n          {notifications.map((notification) => (\r\n            <div\r\n              key={notification._id}\r\n              className={`notification-item ${notification.read ? \"read\" : \"unread\"}`} // Color change based on read/unread\r\n              style={{ color: notification.read ? 'green' : 'red' }}\r\n            >\r\n              <p>Posted by: {notification.authorUsername}</p>\r\n              <button onClick={() => handleViewNotificationPost(notification)}>View Post</button>\r\n            </div>\r\n          ))}\r\n          <button onClick={() => setShowNotificationPrompt(false)}>Close</button>\r\n        </div>\r\n      )}\r\n\r\n      <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}