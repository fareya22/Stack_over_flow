{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport PostForm from '../components/PostForm';\nimport UnreadPostsModal from '../components/UnreadPostsModal';\nimport io from 'socket.io-client';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Dashboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [showNotificationModal, setShowNotificationModal] = useState(false);\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('token');\n  const fetchPosts = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/posts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const fetchUnreadNotifications = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/notifications/unread', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(data);\n    } catch (error) {\n      console.error(\"Error fetching notifications:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n    fetchUnreadNotifications();\n    socket.on('newPostNotification', notification => {\n      if (notification.authorUsername !== username) {\n        setNotifications(prev => [notification, ...prev]);\n      }\n    });\n    return () => {\n      socket.off('newPostNotification');\n    };\n  }, [username]);\n  const handlePostCreated = () => {\n    fetchPosts();\n    setShowPostForm(false);\n  };\n  const handleNotificationModalOpen = () => setShowNotificationModal(prev => !prev);\n  const handlePostOpen = postId => setNotifications(notifications.filter(notif => notif.postId !== postId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username-box\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPostForm(!showPostForm),\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-box\",\n        onClick: handleNotificationModalOpen,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"Notifications \", notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notification-count\",\n            children: notifications.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }, this), showNotificationModal && /*#__PURE__*/_jsxDEV(UnreadPostsModal, {\n      notifications: notifications,\n      onPostOpen: handlePostOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), posts.map(post => {\n        var _post$author;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Posted by: \", ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.username) || \"Anonymous\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), post.language && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Language: \", post.language]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 31\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ZdO2P/iPKUxEe3vcMp2pJg/FYsU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","PostForm","UnreadPostsModal","io","jsxDEV","_jsxDEV","socket","Dashboard","_s","posts","setPosts","showPostForm","setShowPostForm","notifications","setNotifications","showNotificationModal","setShowNotificationModal","username","localStorage","getItem","token","fetchPosts","data","get","headers","Authorization","error","console","fetchUnreadNotifications","on","notification","authorUsername","prev","off","handlePostCreated","handleNotificationModalOpen","handlePostOpen","postId","filter","notif","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","onPostCreated","onPostOpen","map","post","_post$author","author","title","language","_id","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport PostForm from '../components/PostForm';\r\nimport UnreadPostsModal from '../components/UnreadPostsModal';\r\nimport io from 'socket.io-client';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Dashboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [showPostForm, setShowPostForm] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [showNotificationModal, setShowNotificationModal] = useState(false);\r\n\r\n  const username = localStorage.getItem('username');\r\n  const token = localStorage.getItem('token');\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const { data } = await API.get('/posts', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setPosts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUnreadNotifications = async () => {\r\n    try {\r\n      const { data } = await API.get('/notifications/unread', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setNotifications(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notifications:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    fetchUnreadNotifications();\r\n\r\n    socket.on('newPostNotification', (notification) => {\r\n      if (notification.authorUsername !== username) {\r\n        setNotifications((prev) => [notification, ...prev]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('newPostNotification');\r\n    };\r\n  }, [username]);\r\n\r\n  const handlePostCreated = () => {\r\n    fetchPosts();\r\n    setShowPostForm(false);\r\n  };\r\n\r\n  const handleNotificationModalOpen = () => setShowNotificationModal((prev) => !prev);\r\n  const handlePostOpen = (postId) => setNotifications(notifications.filter((notif) => notif.postId !== postId));\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"username-box\">\r\n          <span>{username}</span>\r\n        </div>\r\n\r\n        <button onClick={() => setShowPostForm(!showPostForm)}>Create Post</button>\r\n\r\n        <div className=\"notification-box\" onClick={handleNotificationModalOpen}>\r\n          <button>Notifications {notifications.length > 0 && <span className=\"notification-count\">{notifications.length}</span>}</button>\r\n        </div>\r\n      </div>\r\n\r\n      {showPostForm && <PostForm onPostCreated={handlePostCreated} />}\r\n      {showNotificationModal && <UnreadPostsModal notifications={notifications} onPostOpen={handlePostOpen} />}\r\n      \r\n      <div className=\"posts-container\">\r\n        <h2>Recent Posts</h2>\r\n        {posts.map((post) => (\r\n          <div key={post._id} className=\"post-item\">\r\n            <p>Posted by: {post.author?.username || \"Anonymous\"}</p>\r\n            <h3>{post.title}</h3>\r\n            {post.language && <p>Language: {post.language}</p>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}