{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\components\\\\UnreadPostsModal.js\";\n// src/components/UnreadPostsModal.js\nimport React from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UnreadPostsModal = ({\n  notifications,\n  onPostOpen\n}) => {\n  const handlePostClick = async postId => {\n    try {\n      const {\n        data\n      } = await API.get(`/posts/${postId}`);\n      window.open(`/posts/${postId}`, '_blank');\n      onPostOpen(postId); // Notify parent component to mark as read\n    } catch (error) {\n      console.error(\"Error fetching post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"unread-posts-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Unread Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-item\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Posted by: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => handlePostClick(notification.postId),\n          children: notification.authorUsername || 'Anonymous'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, notification._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = UnreadPostsModal;\nexport default UnreadPostsModal;\nvar _c;\n$RefreshReg$(_c, \"UnreadPostsModal\");","map":{"version":3,"names":["React","API","jsxDEV","_jsxDEV","UnreadPostsModal","notifications","onPostOpen","handlePostClick","postId","data","get","window","open","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","notification","href","onClick","authorUsername","_id","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/components/UnreadPostsModal.js"],"sourcesContent":["// src/components/UnreadPostsModal.js\r\nimport React from 'react';\r\nimport API from '../api';\r\n\r\nconst UnreadPostsModal = ({ notifications, onPostOpen }) => {\r\n  const handlePostClick = async (postId) => {\r\n    try {\r\n      const { data } = await API.get(`/posts/${postId}`);\r\n      window.open(`/posts/${postId}`, '_blank');\r\n      onPostOpen(postId); // Notify parent component to mark as read\r\n    } catch (error) {\r\n      console.error(\"Error fetching post:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"unread-posts-modal\">\r\n      <h3>Unread Posts</h3>\r\n      {notifications.map((notification) => (\r\n        <div key={notification._id} className=\"notification-item\">\r\n          <p>\r\n            Posted by: <a href=\"#\" onClick={() => handlePostClick(notification.postId)}>{notification.authorUsername || 'Anonymous'}</a>\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnreadPostsModal;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAW,CAAC,KAAK;EAC1D,MAAMC,eAAe,GAAG,MAAOC,MAAM,IAAK;IACxC,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,UAAUF,MAAM,EAAE,CAAC;MAClDG,MAAM,CAACC,IAAI,CAAC,UAAUJ,MAAM,EAAE,EAAE,QAAQ,CAAC;MACzCF,UAAU,CAACE,MAAM,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEV,OAAA;IAAKY,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBf,aAAa,CAACgB,GAAG,CAAEC,YAAY,iBAC9BnB,OAAA;MAA4BY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eACvDb,OAAA;QAAAa,QAAA,GAAG,aACU,eAAAb,OAAA;UAAGoB,IAAI,EAAC,GAAG;UAACC,OAAO,EAAEA,CAAA,KAAMjB,eAAe,CAACe,YAAY,CAACd,MAAM,CAAE;UAAAQ,QAAA,EAAEM,YAAY,CAACG,cAAc,IAAI;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3H;IAAC,GAHIE,YAAY,CAACI,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIrB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACO,EAAA,GAvBIvB,gBAAgB;AAyBtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}