{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport PostForm from '../components/PostForm';\nimport UnreadPostsModal from '../components/UnreadPostsModal';\nimport io from 'socket.io-client';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Dashboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [unreadNotifications, setUnreadNotifications] = useState([]);\n  const [showUnreadModal, setShowUnreadModal] = useState(false);\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('token');\n\n  // Fetch all posts\n  const fetchPosts = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/posts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  // Fetch unread notifications\n  const fetchUnreadNotifications = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/notifications/unread', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUnreadNotifications(data);\n    } catch (error) {\n      console.error(\"Error fetching notifications:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n    fetchUnreadNotifications();\n    socket.on('newPostNotification', notification => {\n      if (notification.authorUsername !== username) {\n        setUnreadNotifications(prev => [notification, ...prev]);\n      }\n    });\n    return () => {\n      socket.off('newPostNotification');\n    };\n  }, [username]);\n  const handlePostCreated = () => {\n    fetchPosts();\n    setShowPostForm(false);\n  };\n  const togglePostForm = () => {\n    setShowPostForm(prev => !prev);\n  };\n  const openUnreadModal = () => {\n    setShowUnreadModal(true);\n  };\n  const closeUnreadModal = () => {\n    setShowUnreadModal(false);\n  };\n  const openPostInNewTab = async postId => {\n    await API.post(`/notifications/markAsRead/${postId}`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setUnreadNotifications(prev => prev.filter(notif => notif.postId !== postId));\n    window.open(`/post/${postId}`, '_blank');\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username-box\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePostForm,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-box\",\n        onClick: openUnreadModal,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), unreadNotifications.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-count\",\n          children: unreadNotifications.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), posts.length > 0 ? posts.map(post => {\n        var _post$author;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"author-name\",\n            children: [\"Posted by: \", ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.username) || \"Anonymous\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), post.language && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Language: \", post.language]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), post.codeFileUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Code Snippet File: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: post.codeFileUrl,\n              download: true,\n              children: \"Download Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), post.uploadedFileUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Uploaded File: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: post.uploadedFileUrl,\n              download: true,\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), showUnreadModal && /*#__PURE__*/_jsxDEV(UnreadPostsModal, {\n      notifications: unreadNotifications,\n      onClose: closeUnreadModal,\n      onPostClick: openPostInNewTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ev1AZvrEiJVXFJH4QlHj/GBFXCI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","PostForm","UnreadPostsModal","io","jsxDEV","_jsxDEV","socket","Dashboard","_s","posts","setPosts","showPostForm","setShowPostForm","unreadNotifications","setUnreadNotifications","showUnreadModal","setShowUnreadModal","username","localStorage","getItem","token","fetchPosts","data","get","headers","Authorization","error","console","fetchUnreadNotifications","on","notification","authorUsername","prev","off","handlePostCreated","togglePostForm","openUnreadModal","closeUnreadModal","openPostInNewTab","postId","post","filter","notif","window","open","handleLogout","removeItem","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","onPostCreated","map","_post$author","author","title","language","codeFileUrl","download","uploadedFileUrl","_id","notifications","onClose","onPostClick","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport PostForm from '../components/PostForm';\r\nimport UnreadPostsModal from '../components/UnreadPostsModal';\r\nimport io from 'socket.io-client';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Dashboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [showPostForm, setShowPostForm] = useState(false);\r\n  const [unreadNotifications, setUnreadNotifications] = useState([]);\r\n  const [showUnreadModal, setShowUnreadModal] = useState(false);\r\n\r\n  const username = localStorage.getItem('username');\r\n  const token = localStorage.getItem('token');\r\n\r\n  // Fetch all posts\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const { data } = await API.get('/posts', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setPosts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch unread notifications\r\n  const fetchUnreadNotifications = async () => {\r\n    try {\r\n      const { data } = await API.get('/notifications/unread', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setUnreadNotifications(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notifications:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    fetchUnreadNotifications();\r\n\r\n    socket.on('newPostNotification', (notification) => {\r\n      if (notification.authorUsername !== username) {\r\n        setUnreadNotifications((prev) => [notification, ...prev]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('newPostNotification');\r\n    };\r\n  }, [username]);\r\n\r\n  const handlePostCreated = () => {\r\n    fetchPosts();\r\n    setShowPostForm(false);\r\n  };\r\n\r\n  const togglePostForm = () => {\r\n    setShowPostForm((prev) => !prev);\r\n  };\r\n\r\n  const openUnreadModal = () => {\r\n    setShowUnreadModal(true);\r\n  };\r\n\r\n  const closeUnreadModal = () => {\r\n    setShowUnreadModal(false);\r\n  };\r\n\r\n  const openPostInNewTab = async (postId) => {\r\n    await API.post(`/notifications/markAsRead/${postId}`, {}, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    setUnreadNotifications((prev) =>\r\n      prev.filter((notif) => notif.postId !== postId)\r\n    );\r\n\r\n    window.open(`/post/${postId}`, '_blank');\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"username-box\">\r\n          <span>{username}</span>\r\n        </div>\r\n\r\n        <button onClick={togglePostForm}>Create Post</button>\r\n\r\n        <div className=\"notification-box\" onClick={openUnreadModal}>\r\n          <button>Notification</button>\r\n          {unreadNotifications.length > 0 && (\r\n            <span className=\"notification-count\">{unreadNotifications.length}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {showPostForm && <PostForm onPostCreated={handlePostCreated} />}\r\n\r\n      <div className=\"posts-container\">\r\n        <h2>Recent Posts</h2>\r\n        {posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <div key={post._id} className=\"post-item\">\r\n              <p className=\"author-name\">Posted by: {post.author?.username || \"Anonymous\"}</p>\r\n              <h3>{post.title}</h3>\r\n              {post.language && <p>Language: {post.language}</p>}\r\n              {post.codeFileUrl && (\r\n                <p>\r\n                  Code Snippet File: <a href={post.codeFileUrl} download>Download Code</a>\r\n                </p>\r\n              )}\r\n              {post.uploadedFileUrl && (\r\n                <p>\r\n                  Uploaded File: <a href={post.uploadedFileUrl} download>Download File</a>\r\n                </p>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No posts available</p>\r\n        )}\r\n      </div>\r\n\r\n      <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\r\n\r\n      {/* Unread Posts Modal */}\r\n      {showUnreadModal && (\r\n        <UnreadPostsModal\r\n          notifications={unreadNotifications}\r\n          onClose={closeUnreadModal}\r\n          onPostClick={openPostInNewTab}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}