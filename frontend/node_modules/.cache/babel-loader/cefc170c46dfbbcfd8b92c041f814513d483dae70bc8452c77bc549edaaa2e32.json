{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport PostForm from '../components/PostForm';\nimport io from 'socket.io-client';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Dashboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [showNotificationDot, setShowNotificationDot] = useState(false);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const [expandedPostContent, setExpandedPostContent] = useState(null);\n  const [showNotificationsPrompt, setShowNotificationsPrompt] = useState(false);\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('token');\n  const fetchPosts = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/posts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const fetchUnreadNotifications = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/notifications/unread', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(data);\n      setShowNotificationDot(data.length > 0);\n    } catch (error) {\n      console.error(\"Error fetching notifications:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n    fetchUnreadNotifications();\n    socket.on('newPostNotification', notification => {\n      if (notification.authorUsername !== username) {\n        setNotifications(prev => [notification, ...prev]);\n        setShowNotificationDot(true);\n      }\n    });\n    return () => {\n      socket.off('newPostNotification');\n    };\n  }, [username]);\n  const handlePostCreated = () => {\n    fetchPosts();\n    setShowPostForm(false);\n  };\n  const togglePostForm = () => {\n    setShowPostForm(prev => !prev);\n  };\n  const toggleNotificationsPrompt = () => {\n    setShowNotificationDot(false);\n    setShowNotificationsPrompt(prev => !prev);\n  };\n  const markNotificationAsRead = async notificationId => {\n    try {\n      await API.patch(`/notifications/${notificationId}/read`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(prev => prev.map(notif => notif._id === notificationId ? {\n        ...notif,\n        read: true\n      } : notif));\n    } catch (error) {\n      console.error(\"Error marking notification as read:\", error);\n    }\n  };\n  const handleViewPostFromNotification = async (postId, notificationId) => {\n    handleViewPost(postId);\n    markNotificationAsRead(notificationId);\n  };\n  const handleViewPost = async postId => {\n    if (expandedPostId === postId) {\n      setExpandedPostId(null);\n      setExpandedPostContent(null);\n    } else {\n      try {\n        const {\n          data\n        } = await API.get(`/posts/${postId}`);\n        setExpandedPostId(postId);\n        setExpandedPostContent(data);\n      } catch (error) {\n        console.error(\"Error fetching post details:\", error);\n      }\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username-box\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePostForm,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleNotificationsPrompt,\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), showNotificationDot && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 24\n    }, this), showNotificationsPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-prompt\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Unread Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), notifications.length > 0 ? notifications.map(notification => {\n        var _notification$postId$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${notification.read ? 'notification-read' : 'notification-unread'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Posted by: \", ((_notification$postId$ = notification.postId.author) === null || _notification$postId$ === void 0 ? void 0 : _notification$postId$.username) || \"Author Unknown\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleViewPostFromNotification(notification.postId._id, notification._id),\n            children: \"View Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No unread notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), posts.length > 0 ? posts.map(post => {\n        var _post$author;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"author-name\",\n            children: [\"Posted by: \", ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.username) || \"Anonymous\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleViewPost(post._id),\n            children: expandedPostId === post._id ? \"Hide Post\" : \"View Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), expandedPostId === post._id && expandedPostContent && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Post Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Language:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 25\n                }, this), \" \", expandedPostContent.post.language || 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), expandedPostContent.codeContent && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: /*#__PURE__*/_jsxDEV(\"u\", {\n                  children: \"Code Snippet:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: expandedPostContent.codeContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this), expandedPostContent.uploadedFileContent && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: /*#__PURE__*/_jsxDEV(\"u\", {\n                  children: \"Uploaded File Content:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: expandedPostContent.uploadedFileContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"R/2mEFtDIjjgQnNELDLYy08NdXo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","PostForm","io","jsxDEV","_jsxDEV","socket","Dashboard","_s","posts","setPosts","showPostForm","setShowPostForm","notifications","setNotifications","showNotificationDot","setShowNotificationDot","expandedPostId","setExpandedPostId","expandedPostContent","setExpandedPostContent","showNotificationsPrompt","setShowNotificationsPrompt","username","localStorage","getItem","token","fetchPosts","data","get","headers","Authorization","error","console","fetchUnreadNotifications","length","on","notification","authorUsername","prev","off","handlePostCreated","togglePostForm","toggleNotificationsPrompt","markNotificationAsRead","notificationId","patch","map","notif","_id","read","handleViewPostFromNotification","postId","handleViewPost","handleLogout","removeItem","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onPostCreated","_notification$postId$","author","post","_post$author","title","language","codeContent","uploadedFileContent","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport PostForm from '../components/PostForm';\r\nimport io from 'socket.io-client';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Dashboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [showPostForm, setShowPostForm] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [showNotificationDot, setShowNotificationDot] = useState(false);\r\n  const [expandedPostId, setExpandedPostId] = useState(null);\r\n  const [expandedPostContent, setExpandedPostContent] = useState(null);\r\n  const [showNotificationsPrompt, setShowNotificationsPrompt] = useState(false);\r\n\r\n  const username = localStorage.getItem('username');\r\n  const token = localStorage.getItem('token');\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const { data } = await API.get('/posts', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setPosts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUnreadNotifications = async () => {\r\n    try {\r\n      const { data } = await API.get('/notifications/unread', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setNotifications(data);\r\n      setShowNotificationDot(data.length > 0);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notifications:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    fetchUnreadNotifications();\r\n\r\n    socket.on('newPostNotification', (notification) => {\r\n      if (notification.authorUsername !== username) {\r\n        setNotifications((prev) => [notification, ...prev]);\r\n        setShowNotificationDot(true);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('newPostNotification');\r\n    };\r\n  }, [username]);\r\n\r\n  const handlePostCreated = () => {\r\n    fetchPosts();\r\n    setShowPostForm(false);\r\n  };\r\n\r\n  const togglePostForm = () => {\r\n    setShowPostForm((prev) => !prev);\r\n  };\r\n\r\n  const toggleNotificationsPrompt = () => {\r\n    setShowNotificationDot(false);\r\n    setShowNotificationsPrompt((prev) => !prev);\r\n  };\r\n\r\n  const markNotificationAsRead = async (notificationId) => {\r\n    try {\r\n      await API.patch(`/notifications/${notificationId}/read`, {}, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setNotifications((prev) =>\r\n        prev.map((notif) =>\r\n          notif._id === notificationId ? { ...notif, read: true } : notif\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error marking notification as read:\", error);\r\n    }\r\n  };\r\n\r\n  const handleViewPostFromNotification = async (postId, notificationId) => {\r\n    handleViewPost(postId);\r\n    markNotificationAsRead(notificationId);\r\n  };\r\n\r\n  const handleViewPost = async (postId) => {\r\n    if (expandedPostId === postId) {\r\n      setExpandedPostId(null);\r\n      setExpandedPostContent(null);\r\n    } else {\r\n      try {\r\n        const { data } = await API.get(`/posts/${postId}`);\r\n        setExpandedPostId(postId);\r\n        setExpandedPostContent(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching post details:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"username-box\">\r\n          <span>{username}</span>\r\n        </div>\r\n\r\n        <button onClick={togglePostForm}>Create Post</button>\r\n\r\n        <div className=\"notification-box\">\r\n          <button onClick={toggleNotificationsPrompt}>Notification</button>\r\n          {showNotificationDot && <span className=\"notification-dot\"></span>}\r\n        </div>\r\n      </div>\r\n\r\n      {showPostForm && <PostForm onPostCreated={handlePostCreated} />}\r\n\r\n      {showNotificationsPrompt && (\r\n        <div className=\"notifications-prompt\">\r\n          <h4>Unread Notifications</h4>\r\n          {notifications.length > 0 ? (\r\n            notifications.map((notification) => (\r\n              <div\r\n                key={notification._id}\r\n                className={`notification-item ${\r\n                  notification.read ? 'notification-read' : 'notification-unread'\r\n                }`}\r\n              >\r\n                <p>\r\n                  Posted by: {notification.postId.author?.username || \"Author Unknown\"}\r\n                </p>\r\n                <button\r\n                  onClick={() =>\r\n                    handleViewPostFromNotification(\r\n                      notification.postId._id,\r\n                      notification._id\r\n                    )\r\n                  }\r\n                >\r\n                  View Post\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No unread notifications</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"posts-container\">\r\n        <h2>Recent Posts</h2>\r\n        {posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <div key={post._id} className=\"post-item\">\r\n              <p className=\"author-name\">Posted by: {post.author?.username || \"Anonymous\"}</p>\r\n              <h3>{post.title}</h3>\r\n              <br></br>\r\n              <button onClick={() => handleViewPost(post._id)}>\r\n                {expandedPostId === post._id ? \"Hide Post\" : \"View Post\"}\r\n              </button>\r\n\r\n              {expandedPostId === post._id && expandedPostContent && (\r\n                <div className=\"post-details\">\r\n                  <h4><u>Post Details:</u></h4>\r\n                  <p><u><strong>Language:</strong> {expandedPostContent.post.language || 'N/A'}</u></p>\r\n                  \r\n                  {expandedPostContent.codeContent && (\r\n                    <div>\r\n                      <strong><u>Code Snippet:</u></strong>\r\n                      <pre>{expandedPostContent.codeContent}</pre>\r\n                    </div>\r\n                  )}\r\n\r\n                  {expandedPostContent.uploadedFileContent && (\r\n                    <div>\r\n                      <strong><u>Uploaded File Content:</u></strong>\r\n                      <pre>{expandedPostContent.uploadedFileContent}</pre>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No posts available</p>\r\n        )}\r\n      </div>\r\n\r\n      <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}