{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\n// src/components/PostForm.js\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  onPostCreated\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    // Ensure title is initialized\n    codeSnippet: '',\n    language: ''\n  });\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setError(''); // Clear previous error\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Verify the title before sending\n    if (!formData.title || formData.title.trim() === '') {\n      setError(\"Title is required.\");\n      console.error(\"Title field is missing or empty.\");\n      return;\n    }\n    const token = localStorage.getItem('token');\n    const formDataObj = new FormData();\n    formDataObj.append('title', formData.title.trim()); // Required field\n    if (formData.codeSnippet) formDataObj.append('codeSnippet', formData.codeSnippet);\n    if (formData.language) formDataObj.append('language', formData.language);\n    if (file) formDataObj.append('file', file);\n    console.log(\"Form Data Submitted:\", {\n      title: formData.title,\n      language: formData.language,\n      fileName: (file === null || file === void 0 ? void 0 : file.name) || 'No file'\n    });\n    try {\n      await API.post('/posts/create', formDataObj, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Post created successfully');\n      onPostCreated();\n    } catch (error) {\n      console.error('Error creating post:', error);\n      setError('Failed to create post. Please ensure all required fields are filled and try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"post-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Post Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      placeholder: \"Post Title\",\n      value: formData.title,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Code Snippet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"codeSnippet\",\n      placeholder: \"Code Snippet (optional)\",\n      value: formData.codeSnippet,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Extension\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"language\",\n      value: formData.language,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"javascript\",\n        children: \"JavaScript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"python\",\n        children: \"Python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cpp\",\n        children: \"C++\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"java\",\n        children: \"Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"q5rcoRSzoVRWPxfFXzl/E2Rny3w=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","PostForm","onPostCreated","_s","formData","setFormData","title","codeSnippet","language","file","setFile","error","setError","handleChange","e","target","name","value","handleFileChange","files","handleSubmit","preventDefault","trim","console","token","localStorage","getItem","formDataObj","FormData","append","log","fileName","post","headers","Authorization","alert","onSubmit","className","children","_jsxFileName","lineNumber","columnNumber","style","color","placeholder","onChange","required","type","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/components/PostForm.js"],"sourcesContent":["// src/components/PostForm.js\r\nimport React, { useState } from 'react';\r\nimport API from '../api';\r\n\r\nconst PostForm = ({ onPostCreated }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '', // Ensure title is initialized\r\n    codeSnippet: '',\r\n    language: '',\r\n  });\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    setError(''); // Clear previous error\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Verify the title before sending\r\n    if (!formData.title || formData.title.trim() === '') {\r\n      setError(\"Title is required.\");\r\n      console.error(\"Title field is missing or empty.\");\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem('token');\r\n    const formDataObj = new FormData();\r\n    formDataObj.append('title', formData.title.trim()); // Required field\r\n    if (formData.codeSnippet) formDataObj.append('codeSnippet', formData.codeSnippet);\r\n    if (formData.language) formDataObj.append('language', formData.language);\r\n    if (file) formDataObj.append('file', file);\r\n\r\n    console.log(\"Form Data Submitted:\", {\r\n      title: formData.title,\r\n      language: formData.language,\r\n      fileName: file?.name || 'No file',\r\n    });\r\n\r\n    try {\r\n      await API.post('/posts/create', formDataObj, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      alert('Post created successfully');\r\n      onPostCreated();\r\n    } catch (error) {\r\n      console.error('Error creating post:', error); \r\n      setError('Failed to create post. Please ensure all required fields are filled and try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"post-form\">\r\n      <h2>Create Post</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <label>Post Title</label>\r\n      <input\r\n        name=\"title\"\r\n        placeholder=\"Post Title\"\r\n        value={formData.title}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <label>Code Snippet</label>\r\n      <textarea\r\n        name=\"codeSnippet\"\r\n        placeholder=\"Code Snippet (optional)\"\r\n        value={formData.codeSnippet}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <label>Extension</label>\r\n      <select name=\"language\" value={formData.language} onChange={handleChange}>\r\n        <option value=\"\">Select Language</option>\r\n        <option value=\"javascript\">JavaScript</option>\r\n        <option value=\"python\">Python</option>\r\n        <option value=\"cpp\">C++</option>\r\n        <option value=\"java\">Java</option>\r\n      </select>\r\n\r\n      <label>File</label>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n\r\n      <button type=\"submit\">Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,KAAK,EAAE,EAAE;IAAE;IACXC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IAC1BT,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACU,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;IAC7DL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMM,gBAAgB,GAAIJ,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAON,CAAC,IAAK;IAChCA,CAAC,CAACO,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACjB,QAAQ,CAACE,KAAK,IAAIF,QAAQ,CAACE,KAAK,CAACgB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACnDV,QAAQ,CAAC,oBAAoB,CAAC;MAC9BW,OAAO,CAACZ,KAAK,CAAC,kCAAkC,CAAC;MACjD;IACF;IAEA,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,WAAW,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAClCD,WAAW,CAACE,MAAM,CAAC,OAAO,EAAEzB,QAAQ,CAACE,KAAK,CAACgB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,IAAIlB,QAAQ,CAACG,WAAW,EAAEoB,WAAW,CAACE,MAAM,CAAC,aAAa,EAAEzB,QAAQ,CAACG,WAAW,CAAC;IACjF,IAAIH,QAAQ,CAACI,QAAQ,EAAEmB,WAAW,CAACE,MAAM,CAAC,UAAU,EAAEzB,QAAQ,CAACI,QAAQ,CAAC;IACxE,IAAIC,IAAI,EAAEkB,WAAW,CAACE,MAAM,CAAC,MAAM,EAAEpB,IAAI,CAAC;IAE1Cc,OAAO,CAACO,GAAG,CAAC,sBAAsB,EAAE;MAClCxB,KAAK,EAAEF,QAAQ,CAACE,KAAK;MACrBE,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ;MAC3BuB,QAAQ,EAAE,CAAAtB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,IAAI,KAAI;IAC1B,CAAC,CAAC;IAEF,IAAI;MACF,MAAMlB,GAAG,CAACkC,IAAI,CAAC,eAAe,EAAEL,WAAW,EAAE;QAC3CM,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUV,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFW,KAAK,CAAC,2BAA2B,CAAC;MAClCjC,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdY,OAAO,CAACZ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAAC,oFAAoF,CAAC;IAChG;EACF,CAAC;EAED,oBACEZ,OAAA;IAAMoC,QAAQ,EAAEhB,YAAa;IAACiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACjDtC,OAAA;MAAAsC,QAAA,EAAI;IAAW;MAAAP,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB9B,KAAK,iBAAIX,OAAA;MAAG0C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAL,QAAA,EAAE3B;IAAK;MAAAoB,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDzC,OAAA;MAAAsC,QAAA,EAAO;IAAU;MAAAP,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzBzC,OAAA;MACEgB,IAAI,EAAC,OAAO;MACZ4B,WAAW,EAAC,YAAY;MACxB3B,KAAK,EAAEb,QAAQ,CAACE,KAAM;MACtBuC,QAAQ,EAAEhC,YAAa;MACvBiC,QAAQ;IAAA;MAAAf,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEFzC,OAAA;MAAAsC,QAAA,EAAO;IAAY;MAAAP,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3BzC,OAAA;MACEgB,IAAI,EAAC,aAAa;MAClB4B,WAAW,EAAC,yBAAyB;MACrC3B,KAAK,EAAEb,QAAQ,CAACG,WAAY;MAC5BsC,QAAQ,EAAEhC;IAAa;MAAAkB,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAEFzC,OAAA;MAAAsC,QAAA,EAAO;IAAS;MAAAP,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBzC,OAAA;MAAQgB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEb,QAAQ,CAACI,QAAS;MAACqC,QAAQ,EAAEhC,YAAa;MAAAyB,QAAA,gBACvEtC,OAAA;QAAQiB,KAAK,EAAC,EAAE;QAAAqB,QAAA,EAAC;MAAe;QAAAP,QAAA,EAAAQ,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCzC,OAAA;QAAQiB,KAAK,EAAC,YAAY;QAAAqB,QAAA,EAAC;MAAU;QAAAP,QAAA,EAAAQ,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CzC,OAAA;QAAQiB,KAAK,EAAC,QAAQ;QAAAqB,QAAA,EAAC;MAAM;QAAAP,QAAA,EAAAQ,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCzC,OAAA;QAAQiB,KAAK,EAAC,KAAK;QAAAqB,QAAA,EAAC;MAAG;QAAAP,QAAA,EAAAQ,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCzC,OAAA;QAAQiB,KAAK,EAAC,MAAM;QAAAqB,QAAA,EAAC;MAAI;QAAAP,QAAA,EAAAQ,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAV,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAETzC,OAAA;MAAAsC,QAAA,EAAO;IAAI;MAAAP,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnBzC,OAAA;MAAO+C,IAAI,EAAC,MAAM;MAACF,QAAQ,EAAE3B;IAAiB;MAAAa,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEjDzC,OAAA;MAAQ+C,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAI;MAAAP,QAAA,EAAAQ,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAV,QAAA,EAAAQ,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX,CAAC;AAACtC,EAAA,CA5FIF,QAAQ;AAAA+C,EAAA,GAAR/C,QAAQ;AA8Fd,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}