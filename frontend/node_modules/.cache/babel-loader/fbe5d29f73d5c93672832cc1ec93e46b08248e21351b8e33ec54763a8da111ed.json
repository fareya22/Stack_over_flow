{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport '../styles/PostForm.css';\n// src/components/PostForm.js\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  onPostCreated\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    codeSnippet: '',\n    language: ''\n  });\n  const [file, setFile] = useState(null);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formDataObj = new FormData();\n    formDataObj.append('title', formData.title);\n    if (formData.codeSnippet) formDataObj.append('codeSnippet', formData.codeSnippet);\n    if (formData.language) formDataObj.append('language', formData.language);\n    if (file) formDataObj.append('file', file);\n    try {\n      await API.post('/posts/create', formDataObj, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Post created successfully');\n      onPostCreated();\n    } catch (error) {\n      console.error('Error creating post:', error);\n      alert('Failed to create post');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      value: formData.title,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"codeSnippet\",\n      placeholder: \"Code Snippet\",\n      value: formData.codeSnippet,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"language\",\n      placeholder: \"Language\",\n      value: formData.language,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"v3H8431ih/h7ZNNqn8FfZ1SAtLQ=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","PostForm","onPostCreated","_s","formData","setFormData","title","codeSnippet","language","file","setFile","handleChange","e","name","value","target","prevData","handleFileChange","files","handleSubmit","preventDefault","formDataObj","FormData","append","post","headers","alert","error","console","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/components/PostForm.js"],"sourcesContent":["\r\nimport '../styles/PostForm.css';\r\n// src/components/PostForm.js\r\nimport React, { useState } from 'react';\r\nimport API from '../api';\r\n\r\nconst PostForm = ({ onPostCreated }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    codeSnippet: '',\r\n    language: '',\r\n  });\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formDataObj = new FormData();\r\n    formDataObj.append('title', formData.title);\r\n    if (formData.codeSnippet) formDataObj.append('codeSnippet', formData.codeSnippet);\r\n    if (formData.language) formDataObj.append('language', formData.language);\r\n    if (file) formDataObj.append('file', file);\r\n\r\n    try {\r\n      await API.post('/posts/create', formDataObj, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      alert('Post created successfully');\r\n      onPostCreated();\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n      alert('Failed to create post');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Title\"\r\n        value={formData.title}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <textarea\r\n        name=\"codeSnippet\"\r\n        placeholder=\"Code Snippet\"\r\n        value={formData.codeSnippet}\r\n        onChange={handleChange}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"language\"\r\n        placeholder=\"Language\"\r\n        value={formData.language}\r\n        onChange={handleChange}\r\n      />\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}