{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  onPostCreated\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    codeSnippet: '',\n    language: ''\n  });\n  const [file, setFile] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    const formDataObj = new FormData();\n    formDataObj.append('title', formData.title);\n    formDataObj.append('codeSnippet', formData.codeSnippet);\n    formDataObj.append('language', formData.language);\n    formDataObj.append('file', file);\n    try {\n      await API.post('/posts/create', formDataObj, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert('Post created successfully');\n      onPostCreated();\n    } catch (error) {\n      alert('Failed to create post');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      placeholder: \"Post Title\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"codeSnippet\",\n      placeholder: \"Code Snippet\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"language\",\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"c\",\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cpp\",\n        children: \"C++\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"python\",\n        children: \"Python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"java\",\n        children: \"Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"gCvv4QO5CCjXxNUNQ7OoQGvVxKA=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","PostForm","onPostCreated","_s","formData","setFormData","title","codeSnippet","language","file","setFile","handleChange","e","target","name","value","handleFileChange","files","handleSubmit","preventDefault","token","localStorage","getItem","formDataObj","FormData","append","post","headers","alert","error","onSubmit","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/components/PostForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API from '../api';\r\n\r\nconst PostForm = ({ onPostCreated }) => {\r\n  const [formData, setFormData] = useState({ title: '', codeSnippet: '', language: '' });\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    const formDataObj = new FormData();\r\n    formDataObj.append('title', formData.title);\r\n    formDataObj.append('codeSnippet', formData.codeSnippet);\r\n    formDataObj.append('language', formData.language);\r\n    formDataObj.append('file', file);\r\n\r\n    try {\r\n      await API.post('/posts/create', formDataObj, {\r\n        headers: { 'Authorization': token }\r\n      });\r\n      alert('Post created successfully');\r\n      onPostCreated();\r\n    } catch (error) {\r\n      alert('Failed to create post');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input name=\"title\" placeholder=\"Post Title\" onChange={handleChange} />\r\n      <textarea name=\"codeSnippet\" placeholder=\"Code Snippet\" onChange={handleChange} />\r\n      <select name=\"language\" onChange={handleChange}>\r\n        <option value=\"c\">C</option>\r\n        <option value=\"cpp\">C++</option>\r\n        <option value=\"python\">Python</option>\r\n        <option value=\"java\">Java</option>\r\n      </select>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button type=\"submit\">Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}