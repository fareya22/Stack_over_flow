{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport PostForm from '../components/PostForm';\nimport Notification from '../components/Notification';\nimport io from 'socket.io-client';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Dashboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [showNotificationDot, setShowNotificationDot] = useState(false);\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('token');\n  const fetchPosts = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/posts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const fetchUnreadNotifications = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/notifications/unread', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(data);\n      setShowNotificationDot(data.length > 0); // Show red dot if there are unread notifications\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n    fetchUnreadNotifications();\n    socket.on('newPostNotification', notification => {\n      if (notification.authorUsername !== username) {\n        setNotifications(prev => [notification, ...prev]);\n        setShowNotificationDot(true);\n      }\n    });\n    return () => {\n      socket.off('newPostNotification');\n    };\n  }, [username]);\n  const handlePostCreated = () => {\n    fetchPosts();\n    setShowPostForm(false);\n  };\n  const togglePostForm = () => {\n    setShowPostForm(prev => !prev);\n  };\n  const handleNotificationClick = async () => {\n    setShowNotificationDot(false);\n\n    // Mark notifications as read in the database\n    await API.post('/notifications/mark-as-read', {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    fetchPosts(); // Refresh posts to show new ones\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username-box\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePostForm,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-box\",\n        children: [/*#__PURE__*/_jsxDEV(Notification, {\n          onNotificationClick: handleNotificationClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), showNotificationDot && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), posts.length > 0 ? posts.map(post => {\n        var _post$author;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"author-name\",\n            children: [\"Posted by: \", ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.username) || \"Anonymous\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), post.language && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Language: \", post.language]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), post.codeFileUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Code Snippet File: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: post.codeFileUrl,\n              download: true,\n              children: \"Download Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), post.uploadedFileUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Uploaded File: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: post.uploadedFileUrl,\n              download: true,\n              children: \"Download File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"lYb2HUFzLW4jHMx75HX5AMLivWY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","PostForm","Notification","io","jsxDEV","_jsxDEV","socket","Dashboard","_s","posts","setPosts","showPostForm","setShowPostForm","notifications","setNotifications","showNotificationDot","setShowNotificationDot","username","localStorage","getItem","token","fetchPosts","data","get","headers","Authorization","error","console","fetchUnreadNotifications","length","on","notification","authorUsername","prev","off","handlePostCreated","togglePostForm","handleNotificationClick","post","handleLogout","removeItem","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onNotificationClick","onPostCreated","map","_post$author","author","title","language","codeFileUrl","download","uploadedFileUrl","_id","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport PostForm from '../components/PostForm';\r\nimport Notification from '../components/Notification';\r\nimport io from 'socket.io-client';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Dashboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [showPostForm, setShowPostForm] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [showNotificationDot, setShowNotificationDot] = useState(false);\r\n\r\n  const username = localStorage.getItem('username');\r\n  const token = localStorage.getItem('token');\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const { data } = await API.get('/posts', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setPosts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUnreadNotifications = async () => {\r\n    try {\r\n      const { data } = await API.get('/notifications/unread', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      setNotifications(data);\r\n      setShowNotificationDot(data.length > 0); // Show red dot if there are unread notifications\r\n    } catch (error) {\r\n      console.error('Error fetching notifications:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n    fetchUnreadNotifications();\r\n\r\n    socket.on('newPostNotification', (notification) => {\r\n      if (notification.authorUsername !== username) {\r\n        setNotifications((prev) => [notification, ...prev]);\r\n        setShowNotificationDot(true);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('newPostNotification');\r\n    };\r\n  }, [username]);\r\n\r\n  const handlePostCreated = () => {\r\n    fetchPosts();\r\n    setShowPostForm(false);\r\n  };\r\n\r\n  const togglePostForm = () => {\r\n    setShowPostForm((prev) => !prev);\r\n  };\r\n\r\n  const handleNotificationClick = async () => {\r\n    setShowNotificationDot(false);\r\n\r\n    // Mark notifications as read in the database\r\n    await API.post('/notifications/mark-as-read', {}, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    fetchPosts(); // Refresh posts to show new ones\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <div className=\"username-box\">\r\n          <span>{username}</span>\r\n        </div>\r\n\r\n        <button onClick={togglePostForm}>Create Post</button>\r\n\r\n        <div className=\"notification-box\">\r\n          <Notification onNotificationClick={handleNotificationClick} />\r\n          {showNotificationDot && <span className=\"notification-dot\"></span>}\r\n        </div>\r\n      </div>\r\n\r\n      {showPostForm && <PostForm onPostCreated={handlePostCreated} />}\r\n\r\n      <div className=\"posts-container\">\r\n        <h2>Recent Posts</h2>\r\n        {posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <div key={post._id} className=\"post-item\">\r\n              <p className=\"author-name\">Posted by: {post.author?.username || \"Anonymous\"}</p>\r\n              <h3>{post.title}</h3>\r\n              {post.language && <p>Language: {post.language}</p>}\r\n              {post.codeFileUrl && (\r\n                <p>\r\n                  Code Snippet File: <a href={post.codeFileUrl} download>Download Code</a>\r\n                </p>\r\n              )}\r\n              {post.uploadedFileUrl && (\r\n                <p>\r\n                  Uploaded File: <a href={post.uploadedFileUrl} download>Download File</a>\r\n                </p>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No posts available</p>\r\n        )}\r\n      </div>\r\n\r\n      <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}