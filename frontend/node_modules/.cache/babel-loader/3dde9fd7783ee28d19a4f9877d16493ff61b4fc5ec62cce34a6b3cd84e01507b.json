{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faria\\\\Downloads\\\\monoStackOverFlow\\\\StackOverflow-main\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport PostForm from '../components/PostForm';\nimport io from 'socket.io-client';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Dashboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [showNotificationDot, setShowNotificationDot] = useState(false);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const [expandedPostContent, setExpandedPostContent] = useState(null);\n  const [showNotificationsPrompt, setShowNotificationsPrompt] = useState(false);\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('token');\n  const fetchPosts = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/posts', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const fetchUnreadNotifications = async () => {\n    try {\n      const {\n        data\n      } = await API.get('/notifications/unread', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n      setShowNotificationDot(data.some(notif => !notif.read));\n    } catch (error) {\n      console.error(\"Error fetching notifications:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n    fetchUnreadNotifications();\n    const intervalId = setInterval(() => {\n      fetchPosts();\n      fetchUnreadNotifications();\n    }, 2000);\n    socket.on('newPostNotification', notification => {\n      if (notification.authorUsername !== username) {\n        setNotifications(prev => [notification, ...prev]);\n        setShowNotificationDot(true);\n      }\n    });\n    return () => {\n      clearInterval(intervalId);\n      socket.off('newPostNotification');\n    };\n  }, [username]);\n  const handlePostCreated = () => {\n    fetchPosts();\n    setShowPostForm(false);\n  };\n  const togglePostForm = () => {\n    setShowPostForm(prev => !prev);\n  };\n  const toggleNotificationsPrompt = () => {\n    setShowNotificationsPrompt(prev => !prev);\n  };\n  const markNotificationAsRead = async notificationId => {\n    try {\n      await API.patch(`/notifications/${notificationId}/read`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setNotifications(prev => prev.map(notif => notif._id === notificationId ? {\n        ...notif,\n        read: true\n      } : notif));\n      setShowNotificationDot(notifications.some(notif => !notif.read));\n    } catch (error) {\n      console.error(\"Error marking notification as read:\", error);\n    }\n  };\n  const handleViewPostFromNotification = async (postId, notificationId) => {\n    handleViewPost(postId);\n    await markNotificationAsRead(notificationId);\n  };\n  const handleViewPost = async postId => {\n    if (expandedPostId === postId) {\n      setExpandedPostId(null);\n      setExpandedPostContent(null);\n    } else {\n      try {\n        const {\n          data\n        } = await API.get(`/posts/${postId}`);\n        setExpandedPostId(postId);\n        setExpandedPostContent(data);\n      } catch (error) {\n        console.error(\"Error fetching post details:\", error);\n      }\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    window.location.href = '/';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username-box\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePostForm,\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleNotificationsPrompt,\n          children: \"Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), showNotificationDot && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 24\n    }, this), showNotificationsPrompt && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-prompt\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Unread Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), notifications.length > 0 ? notifications.map(notification => {\n        var _notification$postId$;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${notification.read ? 'notification-read' : 'notification-unread'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: notification.read ? 'green' : 'red'\n            },\n            children: [\"Posted by: \", ((_notification$postId$ = notification.postId.author) === null || _notification$postId$ === void 0 ? void 0 : _notification$postId$.username) || \"Author Unknown\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleViewPostFromNotification(notification.postId._id, notification._id),\n            children: \"View Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No unread notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleNotificationsPrompt,\n        className: \"close-prompt-button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), posts.length > 0 ? posts.map(post => {\n        var _post$author;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"author-name\",\n            children: [\"Posted by: \", ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.username) || \"Anonymous\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleViewPost(post._id),\n            children: expandedPostId === post._id ? \"Hide Post\" : \"View Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), expandedPostId === post._id && expandedPostContent && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Post Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"u\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Language:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 25\n                }, this), \" \", expandedPostContent.post.language || 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), expandedPostContent.codeContent && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: /*#__PURE__*/_jsxDEV(\"u\", {\n                  children: \"Code Snippet:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: expandedPostContent.codeContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this), expandedPostContent.uploadedFileContent && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: /*#__PURE__*/_jsxDEV(\"u\", {\n                  children: \"Uploaded File Content:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: expandedPostContent.uploadedFileContent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)]\n        }, post._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"R/2mEFtDIjjgQnNELDLYy08NdXo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","PostForm","io","jsxDEV","_jsxDEV","socket","Dashboard","_s","posts","setPosts","showPostForm","setShowPostForm","notifications","setNotifications","showNotificationDot","setShowNotificationDot","expandedPostId","setExpandedPostId","expandedPostContent","setExpandedPostContent","showNotificationsPrompt","setShowNotificationsPrompt","username","localStorage","getItem","token","fetchPosts","data","get","headers","Authorization","error","console","fetchUnreadNotifications","sort","a","b","Date","createdAt","some","notif","read","intervalId","setInterval","on","notification","authorUsername","prev","clearInterval","off","handlePostCreated","togglePostForm","toggleNotificationsPrompt","markNotificationAsRead","notificationId","patch","map","_id","handleViewPostFromNotification","postId","handleViewPost","handleLogout","removeItem","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onPostCreated","length","_notification$postId$","style","color","author","post","_post$author","title","language","codeContent","uploadedFileContent","_c","$RefreshReg$"],"sources":["C:/Users/faria/Downloads/monoStackOverFlow/StackOverflow-main/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport PostForm from '../components/PostForm';\nimport io from 'socket.io-client';\nimport '../styles/Dashboard.css';\n\nconst socket = io('http://localhost:5000');\n\nconst Dashboard = () => {\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [showNotificationDot, setShowNotificationDot] = useState(false);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const [expandedPostContent, setExpandedPostContent] = useState(null);\n  const [showNotificationsPrompt, setShowNotificationsPrompt] = useState(false);\n\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('token');\n\n  const fetchPosts = async () => {\n    try {\n      const { data } = await API.get('/posts', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setPosts(data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  const fetchUnreadNotifications = async () => {\n    try {\n      const { data } = await API.get('/notifications/unread', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setNotifications(data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt)));\n      setShowNotificationDot(data.some((notif) => !notif.read));\n    } catch (error) {\n      console.error(\"Error fetching notifications:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPosts();\n    fetchUnreadNotifications();\n\n    const intervalId = setInterval(() => {\n      fetchPosts();\n      fetchUnreadNotifications();\n    }, 2000); \n\n    socket.on('newPostNotification', (notification) => {\n      if (notification.authorUsername !== username) {\n        setNotifications((prev) => [notification, ...prev]);\n        setShowNotificationDot(true);\n      }\n    });\n\n    return () => {\n      clearInterval(intervalId); \n      socket.off('newPostNotification');\n    };\n  }, [username]);\n\n  const handlePostCreated = () => {\n    fetchPosts();\n    setShowPostForm(false);\n  };\n\n  const togglePostForm = () => {\n    setShowPostForm((prev) => !prev);\n  };\n\n  const toggleNotificationsPrompt = () => {\n    setShowNotificationsPrompt((prev) => !prev);\n  };\n\n  const markNotificationAsRead = async (notificationId) => {\n    try {\n      await API.patch(`/notifications/${notificationId}/read`, {}, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setNotifications((prev) =>\n        prev.map((notif) =>\n          notif._id === notificationId ? { ...notif, read: true } : notif\n        )\n      );\n      setShowNotificationDot(notifications.some((notif) => !notif.read));\n    } catch (error) {\n      console.error(\"Error marking notification as read:\", error);\n    }\n  };\n\n  const handleViewPostFromNotification = async (postId, notificationId) => {\n    handleViewPost(postId);\n    await markNotificationAsRead(notificationId);\n  };\n\n  const handleViewPost = async (postId) => {\n    if (expandedPostId === postId) {\n      setExpandedPostId(null);\n      setExpandedPostContent(null);\n    } else {\n      try {\n        const { data } = await API.get(`/posts/${postId}`);\n        setExpandedPostId(postId);\n        setExpandedPostContent(data);\n      } catch (error) {\n        console.error(\"Error fetching post details:\", error);\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    window.location.href = '/';\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <div className=\"username-box\">\n          <span>{username}</span>\n        </div>\n\n        <button onClick={togglePostForm}>Create Post</button>\n\n        <div className=\"notification-box\">\n          <button onClick={toggleNotificationsPrompt}>Notification</button>\n          {showNotificationDot && <span className=\"notification-dot\"></span>}\n        </div>\n      </div>\n\n      {showPostForm && <PostForm onPostCreated={handlePostCreated} />}\n\n      {showNotificationsPrompt && (\n        <div className=\"notifications-prompt\">\n          <h4>Unread Notifications</h4>\n          {notifications.length > 0 ? (\n            notifications.map((notification) => (\n              <div\n                key={notification._id}\n                className={`notification-item ${\n                  notification.read ? 'notification-read' : 'notification-unread'\n                }`}\n              >\n                <p style={{ color: notification.read ? 'green' : 'red' }}>\n                  Posted by: {notification.postId.author?.username || \"Author Unknown\"}\n                </p>\n                <button\n                  onClick={() =>\n                    handleViewPostFromNotification(\n                      notification.postId._id,\n                      notification._id\n                    )\n                  }\n                >\n                  View Post\n                </button>\n              </div>\n            ))\n          ) : (\n            <p>No unread notifications</p>\n          )}\n          <button onClick={toggleNotificationsPrompt} className=\"close-prompt-button\">\n            Close\n          </button>\n        </div>\n      )}\n\n      <div className=\"posts-container\">\n        <h2>Recent Posts</h2>\n        {posts.length > 0 ? (\n          posts.map((post) => (\n            <div key={post._id} className=\"post-item\">\n              <p className=\"author-name\">Posted by: {post.author?.username || \"Anonymous\"}</p>\n              <h3>{post.title}</h3>\n              <br />\n              <button onClick={() => handleViewPost(post._id)}>\n                {expandedPostId === post._id ? \"Hide Post\" : \"View Post\"}\n              </button>\n\n              {expandedPostId === post._id && expandedPostContent && (\n                <div className=\"post-details\">\n                  <h4><u>Post Details:</u></h4>\n                  <p><u><strong>Language:</strong> {expandedPostContent.post.language || 'N/A'}</u></p>\n                  \n                  {expandedPostContent.codeContent && (\n                    <div>\n                      <strong><u>Code Snippet:</u></strong>\n                      <pre>{expandedPostContent.codeContent}</pre>\n                    </div>\n                  )}\n\n                  {expandedPostContent.uploadedFileContent && (\n                    <div>\n                      <strong><u>Uploaded File Content:</u></strong>\n                      <pre>{expandedPostContent.uploadedFileContent}</pre>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))\n        ) : (\n          <p>No posts available</p>\n        )}\n      </div>\n\n      <button className=\"logout-button\" onClick={handleLogout}>Logout</button>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}