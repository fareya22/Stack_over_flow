{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\components\\\\Notification.js\",\n  _s = $RefreshSig$();\n// src/components/Notification.js\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst Notification = ({\n  currentUserId,\n  onNewPost\n}) => {\n  _s();\n  const [hasNewNotification, setHasNewNotification] = useState(false);\n  const [newPost, setNewPost] = useState(null);\n  useEffect(() => {\n    socket.on('newPost', data => {\n      // Only show notification if the post is not from the current user\n      if (data.authorId !== currentUserId) {\n        setHasNewNotification(true);\n        setNewPost(data.post); // Store the new post data\n      }\n    });\n    return () => {\n      socket.off('newPost'); // Cleanup event listener on component unmount\n    };\n  }, [currentUserId]);\n  const handleClick = () => {\n    setHasNewNotification(false);\n    if (newPost) {\n      onNewPost(newPost); // Pass the new post to the parent component to display\n      setNewPost(null); // Clear the stored post after viewing\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    className: \"notification-button\",\n    children: [\"Notification \", hasNewNotification && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"dot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"g43ePjYAHkeKGX6e7p8ovaJpppo=\");\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","socket","Notification","currentUserId","onNewPost","_s","hasNewNotification","setHasNewNotification","newPost","setNewPost","on","data","authorId","post","off","handleClick","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/components/Notification.js"],"sourcesContent":["// src/components/Notification.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst Notification = ({ currentUserId, onNewPost }) => {\r\n  const [hasNewNotification, setHasNewNotification] = useState(false);\r\n  const [newPost, setNewPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.on('newPost', (data) => {\r\n      // Only show notification if the post is not from the current user\r\n      if (data.authorId !== currentUserId) {\r\n        setHasNewNotification(true);\r\n        setNewPost(data.post); // Store the new post data\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('newPost'); // Cleanup event listener on component unmount\r\n    };\r\n  }, [currentUserId]);\r\n\r\n  const handleClick = () => {\r\n    setHasNewNotification(false);\r\n    if (newPost) {\r\n      onNewPost(newPost); // Pass the new post to the parent component to display\r\n      setNewPost(null); // Clear the stored post after viewing\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button onClick={handleClick} className=\"notification-button\">\r\n      Notification {hasNewNotification && <span className=\"dot\"></span>}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMI,YAAY,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdK,MAAM,CAACS,EAAE,CAAC,SAAS,EAAGC,IAAI,IAAK;MAC7B;MACA,IAAIA,IAAI,CAACC,QAAQ,KAAKT,aAAa,EAAE;QACnCI,qBAAqB,CAAC,IAAI,CAAC;QAC3BE,UAAU,CAACE,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;MACzB;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXZ,MAAM,CAACa,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACX,aAAa,CAAC,CAAC;EAEnB,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxBR,qBAAqB,CAAC,KAAK,CAAC;IAC5B,IAAIC,OAAO,EAAE;MACXJ,SAAS,CAACI,OAAO,CAAC,CAAC,CAAC;MACpBC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;EAED,oBACET,OAAA;IAAQgB,OAAO,EAAED,WAAY;IAACE,SAAS,EAAC,qBAAqB;IAAAC,QAAA,GAAC,eAC/C,EAACZ,kBAAkB,iBAAIN,OAAA;MAAMiB,SAAS,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEb,CAAC;AAACjB,EAAA,CA/BIH,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}