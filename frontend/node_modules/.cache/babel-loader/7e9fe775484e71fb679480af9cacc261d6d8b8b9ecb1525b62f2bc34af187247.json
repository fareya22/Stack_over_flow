{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\n// src/components/PostForm.js\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  onPostCreated\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    codeSnippet: '',\n    language: 'javascript'\n  });\n  const [file, setFile] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token'); // Retrieve token from localStorage\n\n    const formDataObj = new FormData();\n    formDataObj.append('title', formData.title);\n    formDataObj.append('codeSnippet', formData.codeSnippet);\n    formDataObj.append('language', formData.language);\n    if (file) formDataObj.append('file', file);\n    try {\n      await API.post('/posts/create', formDataObj, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Post created successfully');\n      onPostCreated();\n    } catch (error) {\n      console.error('Error creating post:', error);\n      alert('Failed to create post');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      placeholder: \"Post Title\",\n      value: formData.title,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"codeSnippet\",\n      placeholder: \"Code Snippet\",\n      value: formData.codeSnippet,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"language\",\n      value: formData.language,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"javascript\",\n        children: \"JavaScript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"python\",\n        children: \"Python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cpp\",\n        children: \"C++\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"java\",\n        children: \"Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"KNgvWFTr5v7h/g8grLKUdwqBRE0=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","PostForm","onPostCreated","_s","formData","setFormData","title","codeSnippet","language","file","setFile","handleChange","e","target","name","value","handleFileChange","files","handleSubmit","preventDefault","token","localStorage","getItem","formDataObj","FormData","append","post","headers","alert","error","console","onSubmit","children","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/components/PostForm.js"],"sourcesContent":["// src/components/PostForm.js\r\nimport React, { useState } from 'react';\r\nimport API from '../api';\r\n\r\nconst PostForm = ({ onPostCreated }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    codeSnippet: '',\r\n    language: 'javascript',\r\n  });\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token'); // Retrieve token from localStorage\r\n\r\n    const formDataObj = new FormData();\r\n    formDataObj.append('title', formData.title);\r\n    formDataObj.append('codeSnippet', formData.codeSnippet);\r\n    formDataObj.append('language', formData.language);\r\n    if (file) formDataObj.append('file', file);\r\n\r\n    try {\r\n      await API.post('/posts/create', formDataObj, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      alert('Post created successfully');\r\n      onPostCreated();\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n      alert('Failed to create post');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input name=\"title\" placeholder=\"Post Title\" value={formData.title} onChange={handleChange} required />\r\n      <textarea name=\"codeSnippet\" placeholder=\"Code Snippet\" value={formData.codeSnippet} onChange={handleChange} required />\r\n      <select name=\"language\" value={formData.language} onChange={handleChange}>\r\n        <option value=\"javascript\">JavaScript</option>\r\n        <option value=\"python\">Python</option>\r\n        <option value=\"cpp\">C++</option>\r\n        <option value=\"java\">Java</option>\r\n      </select>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button type=\"submit\">Post</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1BP,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACQ,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,gBAAgB,GAAIJ,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAON,CAAC,IAAK;IAChCA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;IAE7C,MAAMC,WAAW,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAClCD,WAAW,CAACE,MAAM,CAAC,OAAO,EAAErB,QAAQ,CAACE,KAAK,CAAC;IAC3CiB,WAAW,CAACE,MAAM,CAAC,aAAa,EAAErB,QAAQ,CAACG,WAAW,CAAC;IACvDgB,WAAW,CAACE,MAAM,CAAC,UAAU,EAAErB,QAAQ,CAACI,QAAQ,CAAC;IACjD,IAAIC,IAAI,EAAEc,WAAW,CAACE,MAAM,CAAC,MAAM,EAAEhB,IAAI,CAAC;IAE1C,IAAI;MACF,MAAMX,GAAG,CAAC4B,IAAI,CAAC,eAAe,EAAEH,WAAW,EAAE;QAC3CI,OAAO,EAAE;UACP,eAAe,EAAE,UAAUP,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFQ,KAAK,CAAC,2BAA2B,CAAC;MAClC1B,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CD,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,oBACE5B,OAAA;IAAM+B,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBAC3BhC,OAAA;MAAOc,IAAI,EAAC,OAAO;MAACmB,WAAW,EAAC,YAAY;MAAClB,KAAK,EAAEX,QAAQ,CAACE,KAAM;MAAC4B,QAAQ,EAAEvB,YAAa;MAACwB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvGvC,OAAA;MAAUc,IAAI,EAAC,aAAa;MAACmB,WAAW,EAAC,cAAc;MAAClB,KAAK,EAAEX,QAAQ,CAACG,WAAY;MAAC2B,QAAQ,EAAEvB,YAAa;MAACwB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxHvC,OAAA;MAAQc,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEX,QAAQ,CAACI,QAAS;MAAC0B,QAAQ,EAAEvB,YAAa;MAAAqB,QAAA,gBACvEhC,OAAA;QAAQe,KAAK,EAAC,YAAY;QAAAiB,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CvC,OAAA;QAAQe,KAAK,EAAC,QAAQ;QAAAiB,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCvC,OAAA;QAAQe,KAAK,EAAC,KAAK;QAAAiB,QAAA,EAAC;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCvC,OAAA;QAAQe,KAAK,EAAC,MAAM;QAAAiB,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACTvC,OAAA;MAAOwC,IAAI,EAAC,MAAM;MAACN,QAAQ,EAAElB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDvC,OAAA;MAAQwC,IAAI,EAAC,QAAQ;MAAAR,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX,CAAC;AAACpC,EAAA,CAvDIF,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}