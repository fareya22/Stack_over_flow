{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sulta\\\\Desktop\\\\StackOverflow\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useEffect, useState } from 'react';\nimport API from '../api';\nimport PostForm from '../components/PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false); // State to control form visibility\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Ensure the user is authenticated\n        const {\n          data\n        } = await API.get('/posts', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPosts(data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  const handlePostCreated = () => {\n    // Refresh the posts after creating a new one\n    fetchPosts();\n    setShowPostForm(false); // Hide form after post creation\n  };\n  const togglePostForm = () => {\n    setShowPostForm(!showPostForm); // Toggle form visibility\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePostForm,\n      children: showPostForm ? 'Close Post Form' : 'Create New Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(PostForm, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Language: \", post.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: post.codeSnippet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"z+huLpJJn/jZlDIM+NxiOL2Bmy8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","PostForm","jsxDEV","_jsxDEV","Dashboard","_s","posts","setPosts","showPostForm","setShowPostForm","fetchPosts","token","localStorage","getItem","data","get","headers","Authorization","error","console","handlePostCreated","togglePostForm","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onPostCreated","length","map","post","title","language","codeSnippet","_id","_c","$RefreshReg$"],"sources":["C:/Users/sulta/Desktop/StackOverflow/frontend/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport PostForm from '../components/PostForm';\r\n\r\nconst Dashboard = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [showPostForm, setShowPostForm] = useState(false); // State to control form visibility\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token'); // Ensure the user is authenticated\r\n        const { data } = await API.get('/posts', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handlePostCreated = () => {\r\n    // Refresh the posts after creating a new one\r\n    fetchPosts();\r\n    setShowPostForm(false); // Hide form after post creation\r\n  };\r\n\r\n  const togglePostForm = () => {\r\n    setShowPostForm(!showPostForm); // Toggle form visibility\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Your Dashboard</h1>\r\n      <button onClick={togglePostForm}>\r\n        {showPostForm ? 'Close Post Form' : 'Create New Post'}\r\n      </button>\r\n      {showPostForm && <PostForm onPostCreated={handlePostCreated} />} {/* Conditionally render the form */}\r\n      <div>\r\n        <h2>Recent Posts</h2>\r\n        {posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <div key={post._id}>\r\n              <h3>{post.title}</h3>\r\n              <p>Language: {post.language}</p>\r\n              <pre>{post.codeSnippet}</pre>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No posts available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}